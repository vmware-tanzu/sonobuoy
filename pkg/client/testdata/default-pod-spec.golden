---
apiVersion: v1
kind: Namespace
metadata:
  name: 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: 
---
apiVersion: v1
data:
  config.json: |
    {"Description":"","UUID":"","Version":"","ResultsDir":"","Resources":null,"Filters":{"Namespaces":"","LabelSelector":""},"Limits":{"PodLogs":{"Namespaces":"","SonobuoyNamespace":null,"FieldSelectors":null,"LabelSelector":"","Previous":false,"SinceSeconds":null,"SinceTime":null,"Timestamps":false,"TailLines":null,"LimitBytes":null,"LimitSize":"","LimitTime":""}},"Server":{"bindaddress":"","bindport":0,"advertiseaddress":"","timeoutseconds":0},"Plugins":null,"PluginSearchPath":null,"Namespace":"","WorkerImage":"","ImagePullPolicy":"","ImagePullSecrets":""}
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-config-cm
  namespace: 
---
apiVersion: v1
data:
  plugin-0.yaml: |
    podSpec:
      containers: []
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      serviceAccountName: sonobuoy-serviceaccount
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - key: kubernetes.io/e2e-evict-taint-key
        operator: Exists
    sonobuoy-config:
      driver: Job
      plugin-name: e2e
      result-format: junit
    spec:
      command:
      - /run_e2e.sh
      env:
      - name: E2E_EXTRA_ARGS
        value: --progress-report-url=http://localhost:8099/progress
      - name: E2E_FOCUS
      - name: E2E_PARALLEL
      - name: E2E_SKIP
      - name: E2E_USE_GO_RUNNER
        value: "true"
      - name: SONOBUOY
        value: "true"
      - name: SONOBUOY_CONFIG_DIR
        value: /tmp/sonobuoy/config
      - name: SONOBUOY_K8S_VERSION
        value: v99+static.testing
      - name: SONOBUOY_RESULTS_DIR
        value: /tmp/sonobuoy/results
      image: k8s.gcr.io/conformance:v99+static.testing
      name: e2e
      resources: {}
      volumeMounts:
      - mountPath: /tmp/results
        name: results
  plugin-1.yaml: |
    podSpec:
      containers: []
      dnsPolicy: ClusterFirstWithHostNet
      hostIPC: true
      hostNetwork: true
      hostPID: true
      serviceAccountName: sonobuoy-serviceaccount
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /
        name: root
    sonobuoy-config:
      driver: DaemonSet
      plugin-name: systemd-logs
      result-format: raw
    spec:
      command:
      - /bin/sh
      - -c
      - /get_systemd_logs.sh; while true; do echo "Plugin is complete. Sleeping indefinitely
        to avoid container exit and automatic restarts from Kubernetes"; sleep 3600; done
      env:
      - name: CHROOT_DIR
        value: /node
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: RESULTS_DIR
        value: /tmp/results
      - name: SONOBUOY
        value: "true"
      - name: SONOBUOY_CONFIG_DIR
        value: /tmp/sonobuoy/config
      - name: SONOBUOY_K8S_VERSION
        value: v99+static.testing
      - name: SONOBUOY_RESULTS_DIR
        value: /tmp/sonobuoy/results
      image: sonobuoy/systemd-logs:v0.3
      name: systemd-logs
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /tmp/results
        name: results
      - mountPath: /node
        name: root
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-plugins-cm
  namespace: 
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
    tier: analysis
  name: sonobuoy
  namespace: 
spec:
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
  containers:
  - env:
    - name: SONOBUOY_ADVERTISE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: 
    imagePullPolicy: 
    name: kube-sonobuoy
    volumeMounts:
    - mountPath: /etc/sonobuoy
      name: sonobuoy-config-volume
    - mountPath: /plugins.d
      name: sonobuoy-plugins-volume
    - mountPath: /tmp/sonobuoy
      name: output-volume
  restartPolicy: Never
  serviceAccountName: sonobuoy-serviceaccount
  tolerations:
  - key: "kubernetes.io/e2e-evict-taint-key"
    operator: "Exists"
  volumes:
  - configMap:
      name: sonobuoy-config-cm
    name: sonobuoy-config-volume
  - configMap:
      name: sonobuoy-plugins-cm
    name: sonobuoy-plugins-volume
  - emptyDir: {}
    name: output-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
  name: sonobuoy-aggregator
  namespace: 
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    sonobuoy-component: aggregator
  type: ClusterIP
