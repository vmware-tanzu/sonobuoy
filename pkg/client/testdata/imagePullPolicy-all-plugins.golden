---
apiVersion: v1
kind: Namespace
metadata:
  name: sonobuoy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: sonobuoy
---
apiVersion: v1
data:
  config.json: |
    {"Description":"DEFAULT","UUID":"","Version":"static-version-for-testing","ResultsDir":"/tmp/sonobuoy","Resources":null,"Filters":{"Namespaces":".*","LabelSelector":""},"Limits":{"PodLogs":{"Namespaces":"kube-system","SonobuoyNamespace":true,"FieldSelectors":[],"LabelSelector":"","Previous":false,"SinceSeconds":null,"SinceTime":null,"Timestamps":false,"TailLines":null,"LimitBytes":null,"LimitSize":"","LimitTime":""}},"QPS":30,"Burst":50,"Server":{"bindaddress":"0.0.0.0","bindport":8080,"advertiseaddress":"","timeoutseconds":21600},"Plugins":null,"PluginSearchPath":["./plugins.d","/etc/sonobuoy/plugins.d","~/sonobuoy/plugins.d"],"Namespace":"sonobuoy","WorkerImage":"sonobuoy/sonobuoy:static-version-for-testing","ImagePullPolicy":"IfNotPresent","ImagePullSecrets":"","ProgressUpdatesPort":"8099","SecurityContextMode":"nonroot"}
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-config-cm
  namespace: sonobuoy
---
apiVersion: v1
data:
  plugin-0.yaml: |
    sonobuoy-config:
      driver: ""
      plugin-name: myplugin1
    spec:
      env:
      - name: SONOBUOY
        value: "true"
      - name: SONOBUOY_CONFIG_DIR
        value: /tmp/sonobuoy/config
      - name: SONOBUOY_K8S_VERSION
        value: v99+static.testing
      - name: SONOBUOY_RESULTS_DIR
        value: /tmp/sonobuoy/results
      imagePullPolicy: IfNotPresent
      name: ""
      resources: {}
  plugin-1.yaml: |
    sonobuoy-config:
      driver: ""
      plugin-name: myplugin2
    spec:
      env:
      - name: SONOBUOY
        value: "true"
      - name: SONOBUOY_CONFIG_DIR
        value: /tmp/sonobuoy/config
      - name: SONOBUOY_K8S_VERSION
        value: v99+static.testing
      - name: SONOBUOY_RESULTS_DIR
        value: /tmp/sonobuoy/results
      imagePullPolicy: IfNotPresent
      name: ""
      resources: {}
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-plugins-cm
  namespace: sonobuoy
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
    tier: analysis
  name: sonobuoy
  namespace: sonobuoy
spec:
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
  containers:
  - env:
    - name: SONOBUOY_ADVERTISE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: sonobuoy/sonobuoy:static-version-for-testing
    imagePullPolicy: IfNotPresent
    name: kube-sonobuoy
    command: ["/sonobuoy"]
    args: ["aggregator", "--no-exit", "--level=info", "-v=4", "--alsologtostderr"]
    volumeMounts:
    - mountPath: /etc/sonobuoy
      name: sonobuoy-config-volume
    - mountPath: /plugins.d
      name: sonobuoy-plugins-volume
    - mountPath: /tmp/sonobuoy
      name: output-volume
  restartPolicy: Never
  serviceAccountName: sonobuoy-serviceaccount
  tolerations:
  - key: "kubernetes.io/e2e-evict-taint-key"
    operator: "Exists"
  volumes:
  - configMap:
      name: sonobuoy-config-cm
    name: sonobuoy-config-volume
  - configMap:
      name: sonobuoy-plugins-cm
    name: sonobuoy-plugins-volume
  - emptyDir: {}
    name: output-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
  name: sonobuoy-aggregator
  namespace: sonobuoy
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    sonobuoy-component: aggregator
  type: ClusterIP
