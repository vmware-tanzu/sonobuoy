---
{{- if .ClusterAdmin }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{.Namespace}}
---
{{- end }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: {{.Namespace}}
{{- if .EnableRBAC }}
---
apiVersion: rbac.authorization.k8s.io/v1
{{- if .ClusterAdmin }}
kind: ClusterRoleBinding
{{- else }}
kind: RoleBinding
{{- end }}
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount-{{.Namespace}}
{{- if not .ClusterAdmin }}
  namespace: {{.Namespace}}
{{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
{{- if .ClusterAdmin }}
  kind: ClusterRole
{{- else }}
  kind: Role
{{- end }}
  name: sonobuoy-serviceaccount-{{.Namespace}}
subjects:
- kind: ServiceAccount
  name: sonobuoy-serviceaccount
  namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
{{- if .ClusterAdmin }}
kind: ClusterRole
{{- else }}
kind: Role
{{- end }}
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount-{{.Namespace}}
{{- if not .ClusterAdmin }}
  namespace: {{.Namespace}}
{{- end }}
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
{{- if .ClusterAdmin }}
- nonResourceURLs:
  - '/metrics'
  - '/logs'
  - '/logs/*'
  verbs:
  - 'get'
{{- end }}
{{- end }}
{{- if .SSHKey }}
---
apiVersion: v1
kind: Secret
metadata:
  name: ssh-key
  namespace: {{.Namespace}}
type: Opaque
data:
  id_rsa: {{.SSHKey}}
{{- end }}
---
apiVersion: v1
data:
  config.json: |
    {{.SonobuoyConfig}}
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-config-cm
  namespace: {{.Namespace}}
---
apiVersion: v1
{{- if .Plugins }}
data:{{- range $i, $v := .Plugins }}
  plugin-{{- $i -}}.yaml: |
    {{ indent 4 $v }}
{{- end }}
{{- end }}
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-plugins-cm
  namespace: {{.Namespace}}
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
    tier: analysis
  name: sonobuoy
  namespace: {{.Namespace}}
{{- if .CustomAnnotations }}
  annotations:{{- range $k, $v := .CustomAnnotations }}
    {{ indent 4 $k}}: {{$v}}
{{- end }}
{{- end }}
spec:
{{- if .SecurityContext }}
  {{ .SecurityContext }}
{{- end -}}
{{- if .NodeSelectors }}
  nodeSelector:{{- range $k, $v := .NodeSelectors }}
    {{ indent 4 $k}}: {{$v}}
{{- end }}{{- end }}
  containers:
  - env:
    - name: SONOBUOY_ADVERTISE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: {{.SonobuoyImage}}
    imagePullPolicy: {{.ImagePullPolicy}}
    name: kube-sonobuoy
    command: ["/sonobuoy"]
    args: ["aggregator", "--no-exit", "--level={{ .LogLevel }}", "-v={{ .KlogLevel }}", "--alsologtostderr"]
    volumeMounts:
    - mountPath: /etc/sonobuoy
      name: sonobuoy-config-volume
    - mountPath: /plugins.d
      name: sonobuoy-plugins-volume
    - mountPath: /tmp/sonobuoy
      name: output-volume
  {{- if .ImagePullSecrets }}
  imagePullSecrets:
  - name: {{.ImagePullSecrets}}
  {{- end }}
  restartPolicy: Never
  serviceAccountName: sonobuoy-serviceaccount
  tolerations:
  - key: "kubernetes.io/e2e-evict-taint-key"
    operator: "Exists"
  volumes:
  - configMap:
      name: sonobuoy-config-cm
    name: sonobuoy-config-volume
  - configMap:
      name: sonobuoy-plugins-cm
    name: sonobuoy-plugins-volume
  - emptyDir: {}
    name: output-volume
---
{{- if .ConfigMaps }}{{- range $p, $cm := .ConfigMaps }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: plugin-{{ $p }}-cm
  namespace: {{ $.Namespace }}
data:{{- range $f, $data := $cm }}
  {{ $f }}: |
    {{ indent 4 $data }}
{{- end}}
---
{{- end }}{{- end }}
apiVersion: v1
kind: Service
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
  name: sonobuoy-aggregator
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    sonobuoy-component: aggregator
  type: ClusterIP
